ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_1_Start,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_1_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	Clock_1_Start, %function
  25              	Clock_1_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Clock_1.c"
   1:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Clock_1.c **** * File Name: Clock_1.c
   3:Generated_Source\PSoC5/Clock_1.c **** * Version 1.70
   4:Generated_Source\PSoC5/Clock_1.c **** *
   5:Generated_Source\PSoC5/Clock_1.c **** *  Description:
   6:Generated_Source\PSoC5/Clock_1.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/Clock_1.c **** *
   8:Generated_Source\PSoC5/Clock_1.c **** *  Note:
   9:Generated_Source\PSoC5/Clock_1.c **** *
  10:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Clock_1.c **** * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Clock_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************/
  16:Generated_Source\PSoC5/Clock_1.c **** 
  17:Generated_Source\PSoC5/Clock_1.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/Clock_1.c **** #include "Clock_1.h"
  19:Generated_Source\PSoC5/Clock_1.c **** 
  20:Generated_Source\PSoC5/Clock_1.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/Clock_1.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/Clock_1.c **** 
  27:Generated_Source\PSoC5/Clock_1.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/Clock_1.c **** 
  29:Generated_Source\PSoC5/Clock_1.c **** 
  30:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 2


  31:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Start
  32:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  33:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  34:Generated_Source\PSoC5/Clock_1.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  35:Generated_Source\PSoC5/Clock_1.c **** *  "Start on Reset" option is enabled in the DWR.
  36:Generated_Source\PSoC5/Clock_1.c **** *
  37:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  38:Generated_Source\PSoC5/Clock_1.c **** *  void
  39:Generated_Source\PSoC5/Clock_1.c **** *
  40:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  41:Generated_Source\PSoC5/Clock_1.c **** *  void
  42:Generated_Source\PSoC5/Clock_1.c **** *
  43:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  44:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Start(void) 
  45:Generated_Source\PSoC5/Clock_1.c **** {
  28              		.loc 1 45 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  46:Generated_Source\PSoC5/Clock_1.c ****     /* Set the bit to enable the clock. */
  47:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN |= Clock_1_CLKEN_MASK;
  33              		.loc 1 47 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00103 		orr	r3, r3, #1
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c A2430040 		.word	1073759138
  43              		.cfi_endproc
  44              	.LFE0:
  45              		.size	Clock_1_Start, .-Clock_1_Start
  46              		.section	.text.Clock_1_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Clock_1_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Clock_1_Stop, %function
  52              	Clock_1_Stop:
  53              	.LFB1:
  48:Generated_Source\PSoC5/Clock_1.c **** }
  49:Generated_Source\PSoC5/Clock_1.c **** 
  50:Generated_Source\PSoC5/Clock_1.c **** 
  51:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  52:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Stop
  53:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  54:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  55:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  56:Generated_Source\PSoC5/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  57:Generated_Source\PSoC5/Clock_1.c **** *  disabled. If the settings of the clock are changed after calling this
  58:Generated_Source\PSoC5/Clock_1.c **** *  function, the clock may glitch when it is started. To avoid the clock
  59:Generated_Source\PSoC5/Clock_1.c **** *  glitch, use the StopBlock function.
  60:Generated_Source\PSoC5/Clock_1.c **** *
  61:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 3


  62:Generated_Source\PSoC5/Clock_1.c **** *  void
  63:Generated_Source\PSoC5/Clock_1.c **** *
  64:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  65:Generated_Source\PSoC5/Clock_1.c **** *  void
  66:Generated_Source\PSoC5/Clock_1.c **** *
  67:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  68:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Stop(void) 
  69:Generated_Source\PSoC5/Clock_1.c **** {
  54              		.loc 1 69 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  70:Generated_Source\PSoC5/Clock_1.c ****     /* Clear the bit to disable the clock. */
  71:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
  59              		.loc 1 71 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F0FE03 		and	r3, r3, #254
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c A2430040 		.word	1073759138
  69              		.cfi_endproc
  70              	.LFE1:
  71              		.size	Clock_1_Stop, .-Clock_1_Stop
  72              		.section	.text.Clock_1_StopBlock,"ax",%progbits
  73              		.align	2
  74              		.global	Clock_1_StopBlock
  75              		.thumb
  76              		.thumb_func
  77              		.type	Clock_1_StopBlock, %function
  78              	Clock_1_StopBlock:
  79              	.LFB2:
  72:Generated_Source\PSoC5/Clock_1.c **** }
  73:Generated_Source\PSoC5/Clock_1.c **** 
  74:Generated_Source\PSoC5/Clock_1.c **** 
  75:Generated_Source\PSoC5/Clock_1.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  76:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  77:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StopBlock
  78:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  79:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  80:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  81:Generated_Source\PSoC5/Clock_1.c **** *  returning. This ensures that the clock is never truncated (high part of the
  82:Generated_Source\PSoC5/Clock_1.c **** *  cycle will terminate before the clock is disabled and the API returns).
  83:Generated_Source\PSoC5/Clock_1.c **** *  Note that the source clock must be running or this API will never return as
  84:Generated_Source\PSoC5/Clock_1.c **** *  a stopped clock cannot be disabled.
  85:Generated_Source\PSoC5/Clock_1.c **** *
  86:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  87:Generated_Source\PSoC5/Clock_1.c **** *  void
  88:Generated_Source\PSoC5/Clock_1.c **** *
  89:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  90:Generated_Source\PSoC5/Clock_1.c **** *  void
  91:Generated_Source\PSoC5/Clock_1.c **** *
  92:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 4


  93:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StopBlock(void) 
  94:Generated_Source\PSoC5/Clock_1.c **** {
  80              		.loc 1 94 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  95:Generated_Source\PSoC5/Clock_1.c ****     if (Clock_1_CLKEN & Clock_1_CLKEN_MASK)
  85              		.loc 1 95 0
  86 0000 144B     		ldr	r3, .L10
  87 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88 0004 13F0010F 		tst	r3, #1
  89 0008 22D0     		beq	.L7
  90              	.LBB2:
  96:Generated_Source\PSoC5/Clock_1.c ****     {
  97:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
  98:Generated_Source\PSoC5/Clock_1.c ****         uint16 oldDivider;
  99:Generated_Source\PSoC5/Clock_1.c **** 
 100:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0;
  91              		.loc 1 100 0
  92 000a 1349     		ldr	r1, .L10+4
  93 000c 0023     		movs	r3, #0
  94 000e 0B70     		strb	r3, [r1]
 101:Generated_Source\PSoC5/Clock_1.c **** 
 102:Generated_Source\PSoC5/Clock_1.c ****         /* Clear all the mask bits except ours. */
 103:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 104:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 105:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = 0x00u;
 106:Generated_Source\PSoC5/Clock_1.c **** #else
 107:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
  95              		.loc 1 107 0
  96 0010 0120     		movs	r0, #1
  97 0012 124A     		ldr	r2, .L10+8
  98 0014 1070     		strb	r0, [r2]
 108:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = 0x00u;
  99              		.loc 1 108 0
 100 0016 0432     		adds	r2, r2, #4
 101 0018 1370     		strb	r3, [r2]
 109:Generated_Source\PSoC5/Clock_1.c **** #endif
 110:Generated_Source\PSoC5/Clock_1.c **** 
 111:Generated_Source\PSoC5/Clock_1.c ****         /* Clear mask of bus clock. */
 112:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 102              		.loc 1 112 0
 103 001a 0C3A     		subs	r2, r2, #12
 104 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 105 001e 03F07F03 		and	r3, r3, #127
 106 0022 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/Clock_1.c **** 
 114:Generated_Source\PSoC5/Clock_1.c ****         oldDivider = CY_GET_REG16(Clock_1_DIV_PTR);
 107              		.loc 1 114 0
 108 0024 0E4B     		ldr	r3, .L10+12
 109 0026 1A88     		ldrh	r2, [r3]
 110 0028 92B2     		uxth	r2, r2
 111              	.LVL0:
 115:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 112              		.loc 1 115 0
 113 002a 7E3B     		subs	r3, r3, #126
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 5


 114 002c 1A80     		strh	r2, [r3]	@ movhi
 116:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 115              		.loc 1 116 0
 116 002e 0723     		movs	r3, #7
 117 0030 0B70     		strb	r3, [r1]
 118              	.L9:
 117:Generated_Source\PSoC5/Clock_1.c **** 
 118:Generated_Source\PSoC5/Clock_1.c ****         /* Wait for clock to be disabled */
 119:Generated_Source\PSoC5/Clock_1.c ****         while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 119              		.loc 1 119 0 discriminator 1
 120 0032 094B     		ldr	r3, .L10+4
 121 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 0036 13F0010F 		tst	r3, #1
 123 003a FAD1     		bne	.L9
 120:Generated_Source\PSoC5/Clock_1.c **** #endif
 121:Generated_Source\PSoC5/Clock_1.c **** 
 122:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the bit to disable the clock. */
 123:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
 124              		.loc 1 123 0
 125 003c 0549     		ldr	r1, .L10
 126 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 127 0040 03F0FE03 		and	r3, r3, #254
 128 0044 0B70     		strb	r3, [r1]
 124:Generated_Source\PSoC5/Clock_1.c **** 
 125:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 126:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the disable bit */
 127:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0x00u;
 129              		.loc 1 127 0
 130 0046 0021     		movs	r1, #0
 131 0048 034B     		ldr	r3, .L10+4
 132 004a 1970     		strb	r1, [r3]
 128:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(Clock_1_DIV_PTR, oldDivider);
 133              		.loc 1 128 0
 134 004c 7F33     		adds	r3, r3, #127
 135 004e 1A80     		strh	r2, [r3]	@ movhi
 136              	.LVL1:
 137              	.L7:
 138 0050 7047     		bx	lr
 139              	.L11:
 140 0052 00BF     		.align	2
 141              	.L10:
 142 0054 A2430040 		.word	1073759138
 143 0058 01400040 		.word	1073758209
 144 005c 10400040 		.word	1073758224
 145 0060 80400040 		.word	1073758336
 146              	.LBE2:
 147              		.cfi_endproc
 148              	.LFE2:
 149              		.size	Clock_1_StopBlock, .-Clock_1_StopBlock
 150              		.section	.text.Clock_1_StandbyPower,"ax",%progbits
 151              		.align	2
 152              		.global	Clock_1_StandbyPower
 153              		.thumb
 154              		.thumb_func
 155              		.type	Clock_1_StandbyPower, %function
 156              	Clock_1_StandbyPower:
 157              	.LFB3:
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 6


 129:Generated_Source\PSoC5/Clock_1.c **** #endif
 130:Generated_Source\PSoC5/Clock_1.c ****     }
 131:Generated_Source\PSoC5/Clock_1.c **** }
 132:Generated_Source\PSoC5/Clock_1.c **** #endif
 133:Generated_Source\PSoC5/Clock_1.c **** 
 134:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 135:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StandbyPower
 136:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 137:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 138:Generated_Source\PSoC5/Clock_1.c **** *  Sets whether the clock is active in standby mode.
 139:Generated_Source\PSoC5/Clock_1.c **** *
 140:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 141:Generated_Source\PSoC5/Clock_1.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 142:Generated_Source\PSoC5/Clock_1.c **** *
 143:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 144:Generated_Source\PSoC5/Clock_1.c **** *  void
 145:Generated_Source\PSoC5/Clock_1.c **** *
 146:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 147:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StandbyPower(uint8 state) 
 148:Generated_Source\PSoC5/Clock_1.c **** {
 158              		.loc 1 148 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL2:
 149:Generated_Source\PSoC5/Clock_1.c ****     if(state == 0)
 164              		.loc 1 149 0
 165 0000 28B9     		cbnz	r0, .L13
 150:Generated_Source\PSoC5/Clock_1.c ****     {
 151:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= ~Clock_1_CLKSTBY_MASK;
 166              		.loc 1 151 0
 167 0002 064A     		ldr	r2, .L15
 168 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 169 0006 03F0FE03 		and	r3, r3, #254
 170 000a 1370     		strb	r3, [r2]
 171 000c 7047     		bx	lr
 172              	.L13:
 152:Generated_Source\PSoC5/Clock_1.c ****     }
 153:Generated_Source\PSoC5/Clock_1.c ****     else
 154:Generated_Source\PSoC5/Clock_1.c ****     {
 155:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
 173              		.loc 1 155 0
 174 000e 034A     		ldr	r2, .L15
 175 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 176 0012 43F00103 		orr	r3, r3, #1
 177 0016 1370     		strb	r3, [r2]
 178 0018 7047     		bx	lr
 179              	.L16:
 180 001a 00BF     		.align	2
 181              	.L15:
 182 001c B2430040 		.word	1073759154
 183              		.cfi_endproc
 184              	.LFE3:
 185              		.size	Clock_1_StandbyPower, .-Clock_1_StandbyPower
 186              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 187              		.align	2
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 7


 188              		.global	Clock_1_GetDividerRegister
 189              		.thumb
 190              		.thumb_func
 191              		.type	Clock_1_GetDividerRegister, %function
 192              	Clock_1_GetDividerRegister:
 193              	.LFB5:
 156:Generated_Source\PSoC5/Clock_1.c ****     }
 157:Generated_Source\PSoC5/Clock_1.c **** }
 158:Generated_Source\PSoC5/Clock_1.c **** 
 159:Generated_Source\PSoC5/Clock_1.c **** 
 160:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 161:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetDividerRegister
 162:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 163:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 164:Generated_Source\PSoC5/Clock_1.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 165:Generated_Source\PSoC5/Clock_1.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 166:Generated_Source\PSoC5/Clock_1.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 167:Generated_Source\PSoC5/Clock_1.c **** *  SetDividerRegister is called, then the source clock must be running.
 168:Generated_Source\PSoC5/Clock_1.c **** *
 169:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 170:Generated_Source\PSoC5/Clock_1.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 171:Generated_Source\PSoC5/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 172:Generated_Source\PSoC5/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 173:Generated_Source\PSoC5/Clock_1.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 174:Generated_Source\PSoC5/Clock_1.c **** *   will be truncated and the new divide value will take effect immediately. If
 175:Generated_Source\PSoC5/Clock_1.c **** *   zero, the new divide value will take effect at the end of the current clock
 176:Generated_Source\PSoC5/Clock_1.c **** *   cycle.
 177:Generated_Source\PSoC5/Clock_1.c **** *
 178:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 179:Generated_Source\PSoC5/Clock_1.c **** *  void
 180:Generated_Source\PSoC5/Clock_1.c **** *
 181:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 182:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetDividerRegister(uint16 clkDivider, uint8 restart) 
 183:Generated_Source\PSoC5/Clock_1.c **** {
 184:Generated_Source\PSoC5/Clock_1.c ****     uint8 enabled;
 185:Generated_Source\PSoC5/Clock_1.c **** 
 186:Generated_Source\PSoC5/Clock_1.c ****     uint8 currSrc = Clock_1_GetSourceRegister();
 187:Generated_Source\PSoC5/Clock_1.c ****     uint16 oldDivider = Clock_1_GetDividerRegister();
 188:Generated_Source\PSoC5/Clock_1.c **** 
 189:Generated_Source\PSoC5/Clock_1.c ****     if (clkDivider != oldDivider)
 190:Generated_Source\PSoC5/Clock_1.c ****     {
 191:Generated_Source\PSoC5/Clock_1.c ****         enabled = Clock_1_CLKEN & Clock_1_CLKEN_MASK;
 192:Generated_Source\PSoC5/Clock_1.c **** 
 193:Generated_Source\PSoC5/Clock_1.c ****         if (currSrc == CYCLK_SRC_SEL_CLK_SYNC_D && (oldDivider == 0 || clkDivider == 0))
 194:Generated_Source\PSoC5/Clock_1.c ****         {
 195:Generated_Source\PSoC5/Clock_1.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 196:Generated_Source\PSoC5/Clock_1.c ****             if (oldDivider == 0 && clkDivider != 0)
 197:Generated_Source\PSoC5/Clock_1.c ****             {
 198:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 199:Generated_Source\PSoC5/Clock_1.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 200:Generated_Source\PSoC5/Clock_1.c ****                 /* divider is ignored while SSS is set.                                     */
 201:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 202:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= ~CYCLK_SSS;
 203:Generated_Source\PSoC5/Clock_1.c ****             }
 204:Generated_Source\PSoC5/Clock_1.c ****             else
 205:Generated_Source\PSoC5/Clock_1.c ****             {
 206:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 8


 207:Generated_Source\PSoC5/Clock_1.c ****                 /* it without bothering with the shadow load.                               */
 208:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC |= CYCLK_SSS;
 209:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 210:Generated_Source\PSoC5/Clock_1.c ****             }
 211:Generated_Source\PSoC5/Clock_1.c ****         }
 212:Generated_Source\PSoC5/Clock_1.c ****         else
 213:Generated_Source\PSoC5/Clock_1.c ****         {
 214:Generated_Source\PSoC5/Clock_1.c ****             if (enabled)
 215:Generated_Source\PSoC5/Clock_1.c ****             {
 216:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 217:Generated_Source\PSoC5/Clock_1.c **** 
 218:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear all the mask bits except ours. */
 219:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 220:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 221:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = 0x00u;
 222:Generated_Source\PSoC5/Clock_1.c **** #else
 223:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 224:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 225:Generated_Source\PSoC5/Clock_1.c **** #endif
 226:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear mask of bus clock. */
 227:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 228:Generated_Source\PSoC5/Clock_1.c **** 
 229:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 230:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 231:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 232:Generated_Source\PSoC5/Clock_1.c **** 
 233:Generated_Source\PSoC5/Clock_1.c ****                 /* Wait for clock to be disabled */
 234:Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 235:Generated_Source\PSoC5/Clock_1.c **** #endif
 236:Generated_Source\PSoC5/Clock_1.c **** 
 237:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_CLKEN &= ~Clock_1_CLKEN_MASK;
 238:Generated_Source\PSoC5/Clock_1.c **** 
 239:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 240:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear the disable bit */
 241:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 242:Generated_Source\PSoC5/Clock_1.c **** #endif
 243:Generated_Source\PSoC5/Clock_1.c ****             }
 244:Generated_Source\PSoC5/Clock_1.c **** 
 245:Generated_Source\PSoC5/Clock_1.c ****             /* Load divide value. */
 246:Generated_Source\PSoC5/Clock_1.c ****             if (Clock_1_CLKEN & Clock_1_CLKEN_MASK)
 247:Generated_Source\PSoC5/Clock_1.c ****             {
 248:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is still enabled, use the shadow registers */
 249:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 250:Generated_Source\PSoC5/Clock_1.c **** 
 251:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | (restart ? CYCLK_LD_SYNC_EN : 0x00u));
 252:Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 253:Generated_Source\PSoC5/Clock_1.c ****             }
 254:Generated_Source\PSoC5/Clock_1.c ****             else
 255:Generated_Source\PSoC5/Clock_1.c ****             {
 256:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is disabled, set the divider directly */
 257:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 258:Generated_Source\PSoC5/Clock_1.c ****             }
 259:Generated_Source\PSoC5/Clock_1.c **** 
 260:Generated_Source\PSoC5/Clock_1.c ****             Clock_1_CLKEN |= enabled;
 261:Generated_Source\PSoC5/Clock_1.c ****         }
 262:Generated_Source\PSoC5/Clock_1.c ****     }
 263:Generated_Source\PSoC5/Clock_1.c **** }
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 9


 264:Generated_Source\PSoC5/Clock_1.c **** 
 265:Generated_Source\PSoC5/Clock_1.c **** 
 266:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 267:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 268:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 269:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 270:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock divider register value.
 271:Generated_Source\PSoC5/Clock_1.c **** *
 272:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 273:Generated_Source\PSoC5/Clock_1.c **** *  void
 274:Generated_Source\PSoC5/Clock_1.c **** *
 275:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 276:Generated_Source\PSoC5/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 277:Generated_Source\PSoC5/Clock_1.c **** *  divide by 2, the return value will be 1.
 278:Generated_Source\PSoC5/Clock_1.c **** *
 279:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 280:Generated_Source\PSoC5/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void) 
 281:Generated_Source\PSoC5/Clock_1.c **** {
 194              		.loc 1 281 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 282:Generated_Source\PSoC5/Clock_1.c ****     return CY_GET_REG16(Clock_1_DIV_PTR);
 199              		.loc 1 282 0
 200 0000 014B     		ldr	r3, .L18
 201 0002 1888     		ldrh	r0, [r3]
 283:Generated_Source\PSoC5/Clock_1.c **** }
 202              		.loc 1 283 0
 203 0004 80B2     		uxth	r0, r0
 204 0006 7047     		bx	lr
 205              	.L19:
 206              		.align	2
 207              	.L18:
 208 0008 80400040 		.word	1073758336
 209              		.cfi_endproc
 210              	.LFE5:
 211              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 212              		.section	.text.Clock_1_SetModeRegister,"ax",%progbits
 213              		.align	2
 214              		.global	Clock_1_SetModeRegister
 215              		.thumb
 216              		.thumb_func
 217              		.type	Clock_1_SetModeRegister, %function
 218              	Clock_1_SetModeRegister:
 219              	.LFB6:
 284:Generated_Source\PSoC5/Clock_1.c **** 
 285:Generated_Source\PSoC5/Clock_1.c **** 
 286:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetModeRegister
 288:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 289:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 290:Generated_Source\PSoC5/Clock_1.c **** *  Sets flags that control the operating mode of the clock. This function only
 291:Generated_Source\PSoC5/Clock_1.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 292:Generated_Source\PSoC5/Clock_1.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 293:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 294:Generated_Source\PSoC5/Clock_1.c **** *
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 10


 295:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 296:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 297:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 298:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 299:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 300:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 301:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 302:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 303:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 304:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 305:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 306:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 307:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 308:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 309:Generated_Source\PSoC5/Clock_1.c **** *
 310:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 311:Generated_Source\PSoC5/Clock_1.c **** *  void
 312:Generated_Source\PSoC5/Clock_1.c **** *
 313:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 314:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetModeRegister(uint8 clkMode) 
 315:Generated_Source\PSoC5/Clock_1.c **** {
 220              		.loc 1 315 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL3:
 316:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC |= clkMode & Clock_1_MODE_MASK;
 226              		.loc 1 316 0
 227 0000 034B     		ldr	r3, .L21
 228 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 229 0004 00F0F800 		and	r0, r0, #248
 230              	.LVL4:
 231 0008 1043     		orrs	r0, r0, r2
 232 000a 1870     		strb	r0, [r3]
 233 000c 7047     		bx	lr
 234              	.L22:
 235 000e 00BF     		.align	2
 236              	.L21:
 237 0010 82400040 		.word	1073758338
 238              		.cfi_endproc
 239              	.LFE6:
 240              		.size	Clock_1_SetModeRegister, .-Clock_1_SetModeRegister
 241              		.section	.text.Clock_1_ClearModeRegister,"ax",%progbits
 242              		.align	2
 243              		.global	Clock_1_ClearModeRegister
 244              		.thumb
 245              		.thumb_func
 246              		.type	Clock_1_ClearModeRegister, %function
 247              	Clock_1_ClearModeRegister:
 248              	.LFB7:
 317:Generated_Source\PSoC5/Clock_1.c **** }
 318:Generated_Source\PSoC5/Clock_1.c **** 
 319:Generated_Source\PSoC5/Clock_1.c **** 
 320:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_ClearModeRegister
 322:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 11


 323:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 324:Generated_Source\PSoC5/Clock_1.c **** *  Clears flags that control the operating mode of the clock. This function
 325:Generated_Source\PSoC5/Clock_1.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 326:Generated_Source\PSoC5/Clock_1.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 327:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 328:Generated_Source\PSoC5/Clock_1.c **** *
 329:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 330:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 331:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 332:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 333:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 334:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 335:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 336:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 337:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 338:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 339:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 340:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 341:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 342:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 343:Generated_Source\PSoC5/Clock_1.c **** *
 344:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 345:Generated_Source\PSoC5/Clock_1.c **** *  void
 346:Generated_Source\PSoC5/Clock_1.c **** *
 347:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 348:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_ClearModeRegister(uint8 clkMode) 
 349:Generated_Source\PSoC5/Clock_1.c **** {
 249              		.loc 1 349 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL5:
 350:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC &= ~clkMode | ~Clock_1_MODE_MASK;
 255              		.loc 1 350 0
 256 0000 034B     		ldr	r3, .L24
 257 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 258 0004 C043     		mvns	r0, r0
 259              	.LVL6:
 260 0006 40F00700 		orr	r0, r0, #7
 261 000a 1040     		ands	r0, r0, r2
 262 000c 1870     		strb	r0, [r3]
 263 000e 7047     		bx	lr
 264              	.L25:
 265              		.align	2
 266              	.L24:
 267 0010 82400040 		.word	1073758338
 268              		.cfi_endproc
 269              	.LFE7:
 270              		.size	Clock_1_ClearModeRegister, .-Clock_1_ClearModeRegister
 271              		.section	.text.Clock_1_GetModeRegister,"ax",%progbits
 272              		.align	2
 273              		.global	Clock_1_GetModeRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	Clock_1_GetModeRegister, %function
 277              	Clock_1_GetModeRegister:
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 12


 278              	.LFB8:
 351:Generated_Source\PSoC5/Clock_1.c **** }
 352:Generated_Source\PSoC5/Clock_1.c **** 
 353:Generated_Source\PSoC5/Clock_1.c **** 
 354:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 355:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetModeRegister
 356:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 357:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 358:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock mode register value.
 359:Generated_Source\PSoC5/Clock_1.c **** *
 360:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 361:Generated_Source\PSoC5/Clock_1.c **** *  void
 362:Generated_Source\PSoC5/Clock_1.c **** *
 363:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 364:Generated_Source\PSoC5/Clock_1.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 365:Generated_Source\PSoC5/Clock_1.c **** *  ClearModeRegister descriptions for details about the mode bits.
 366:Generated_Source\PSoC5/Clock_1.c **** *
 367:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 368:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetModeRegister(void) 
 369:Generated_Source\PSoC5/Clock_1.c **** {
 279              		.loc 1 369 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 370:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_MODE_MASK;
 284              		.loc 1 370 0
 285 0000 024B     		ldr	r3, .L27
 286 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 371:Generated_Source\PSoC5/Clock_1.c **** }
 287              		.loc 1 371 0
 288 0004 00F0F800 		and	r0, r0, #248
 289 0008 7047     		bx	lr
 290              	.L28:
 291 000a 00BF     		.align	2
 292              	.L27:
 293 000c 82400040 		.word	1073758338
 294              		.cfi_endproc
 295              	.LFE8:
 296              		.size	Clock_1_GetModeRegister, .-Clock_1_GetModeRegister
 297              		.section	.text.Clock_1_GetSourceRegister,"ax",%progbits
 298              		.align	2
 299              		.global	Clock_1_GetSourceRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	Clock_1_GetSourceRegister, %function
 303              	Clock_1_GetSourceRegister:
 304              	.LFB10:
 372:Generated_Source\PSoC5/Clock_1.c **** 
 373:Generated_Source\PSoC5/Clock_1.c **** 
 374:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 375:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetSourceRegister
 376:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 377:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 378:Generated_Source\PSoC5/Clock_1.c **** *  Sets the input source of the clock. The clock must be disabled before
 379:Generated_Source\PSoC5/Clock_1.c **** *  changing the source. The old and new clock sources must be running.
 380:Generated_Source\PSoC5/Clock_1.c **** *
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 13


 381:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 382:Generated_Source\PSoC5/Clock_1.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 383:Generated_Source\PSoC5/Clock_1.c **** *   following input sources:
 384:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 385:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_IMO
 386:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALM
 387:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_ILO
 388:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_PLL
 389:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALK
 390:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_G
 391:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 392:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details on clock sources.
 393:Generated_Source\PSoC5/Clock_1.c **** *
 394:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 395:Generated_Source\PSoC5/Clock_1.c **** *  void
 396:Generated_Source\PSoC5/Clock_1.c **** *
 397:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 398:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetSourceRegister(uint8 clkSource) 
 399:Generated_Source\PSoC5/Clock_1.c **** {
 400:Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 401:Generated_Source\PSoC5/Clock_1.c ****     uint8 oldSrc = Clock_1_GetSourceRegister();
 402:Generated_Source\PSoC5/Clock_1.c **** 
 403:Generated_Source\PSoC5/Clock_1.c ****     if (oldSrc != CYCLK_SRC_SEL_CLK_SYNC_D && clkSource == CYCLK_SRC_SEL_CLK_SYNC_D && currDiv == 0
 404:Generated_Source\PSoC5/Clock_1.c ****     {
 405:Generated_Source\PSoC5/Clock_1.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 406:Generated_Source\PSoC5/Clock_1.c ****         /* then set the source so we are consistent.                                */
 407:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC |= CYCLK_SSS;
 408:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 409:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 410:Generated_Source\PSoC5/Clock_1.c ****     }
 411:Generated_Source\PSoC5/Clock_1.c ****     else if (oldSrc == CYCLK_SRC_SEL_CLK_SYNC_D && clkSource != CYCLK_SRC_SEL_CLK_SYNC_D && currDiv
 412:Generated_Source\PSoC5/Clock_1.c ****     {
 413:Generated_Source\PSoC5/Clock_1.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 414:Generated_Source\PSoC5/Clock_1.c ****         /* lock when we clear SSS.                                                  */
 415:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 416:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 417:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= ~CYCLK_SSS;
 418:Generated_Source\PSoC5/Clock_1.c ****     }
 419:Generated_Source\PSoC5/Clock_1.c ****     else
 420:Generated_Source\PSoC5/Clock_1.c ****     {
 421:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 422:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 423:Generated_Source\PSoC5/Clock_1.c ****     }
 424:Generated_Source\PSoC5/Clock_1.c **** }
 425:Generated_Source\PSoC5/Clock_1.c **** 
 426:Generated_Source\PSoC5/Clock_1.c **** 
 427:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 428:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetSourceRegister
 429:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 430:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 431:Generated_Source\PSoC5/Clock_1.c **** *  Gets the input source of the clock.
 432:Generated_Source\PSoC5/Clock_1.c **** *
 433:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 434:Generated_Source\PSoC5/Clock_1.c **** *  void
 435:Generated_Source\PSoC5/Clock_1.c **** *
 436:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 437:Generated_Source\PSoC5/Clock_1.c **** *  The input source of the clock. See SetSourceRegister for details.
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 14


 438:Generated_Source\PSoC5/Clock_1.c **** *
 439:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 440:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetSourceRegister(void) 
 441:Generated_Source\PSoC5/Clock_1.c **** {
 305              		.loc 1 441 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 442:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_SRC_SEL_MSK;
 310              		.loc 1 442 0
 311 0000 024B     		ldr	r3, .L30
 312 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 443:Generated_Source\PSoC5/Clock_1.c **** }
 313              		.loc 1 443 0
 314 0004 00F00700 		and	r0, r0, #7
 315 0008 7047     		bx	lr
 316              	.L31:
 317 000a 00BF     		.align	2
 318              	.L30:
 319 000c 82400040 		.word	1073758338
 320              		.cfi_endproc
 321              	.LFE10:
 322              		.size	Clock_1_GetSourceRegister, .-Clock_1_GetSourceRegister
 323              		.section	.text.Clock_1_SetDividerRegister,"ax",%progbits
 324              		.align	2
 325              		.global	Clock_1_SetDividerRegister
 326              		.thumb
 327              		.thumb_func
 328              		.type	Clock_1_SetDividerRegister, %function
 329              	Clock_1_SetDividerRegister:
 330              	.LFB4:
 183:Generated_Source\PSoC5/Clock_1.c ****     uint8 enabled;
 331              		.loc 1 183 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL7:
 336 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 337              		.cfi_def_cfa_offset 24
 338              		.cfi_offset 3, -24
 339              		.cfi_offset 4, -20
 340              		.cfi_offset 5, -16
 341              		.cfi_offset 6, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 0546     		mov	r5, r0
 345 0004 0E46     		mov	r6, r1
 186:Generated_Source\PSoC5/Clock_1.c ****     uint16 oldDivider = Clock_1_GetDividerRegister();
 346              		.loc 1 186 0
 347 0006 FFF7FEFF 		bl	Clock_1_GetSourceRegister
 348              	.LVL8:
 349 000a 0446     		mov	r4, r0
 350              	.LVL9:
 187:Generated_Source\PSoC5/Clock_1.c **** 
 351              		.loc 1 187 0
 352 000c FFF7FEFF 		bl	Clock_1_GetDividerRegister
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 15


 353              	.LVL10:
 189:Generated_Source\PSoC5/Clock_1.c ****     {
 354              		.loc 1 189 0
 355 0010 A842     		cmp	r0, r5
 356 0012 50D0     		beq	.L32
 191:Generated_Source\PSoC5/Clock_1.c **** 
 357              		.loc 1 191 0
 358 0014 284B     		ldr	r3, .L45
 359 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 360 0018 02F00102 		and	r2, r2, #1
 361              	.LVL11:
 193:Generated_Source\PSoC5/Clock_1.c ****         {
 362              		.loc 1 193 0
 363 001c 9CB9     		cbnz	r4, .L34
 193:Generated_Source\PSoC5/Clock_1.c ****         {
 364              		.loc 1 193 0 is_stmt 0 discriminator 1
 365 001e 00B1     		cbz	r0, .L35
 193:Generated_Source\PSoC5/Clock_1.c ****         {
 366              		.loc 1 193 0 discriminator 2
 367 0020 8DB9     		cbnz	r5, .L34
 368              	.L35:
 196:Generated_Source\PSoC5/Clock_1.c ****             {
 369              		.loc 1 196 0 is_stmt 1
 370 0022 40B9     		cbnz	r0, .L36
 196:Generated_Source\PSoC5/Clock_1.c ****             {
 371              		.loc 1 196 0 is_stmt 0 discriminator 1
 372 0024 3DB1     		cbz	r5, .L36
 201:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= ~CYCLK_SSS;
 373              		.loc 1 201 0 is_stmt 1
 374 0026 254B     		ldr	r3, .L45+4
 375 0028 1D80     		strh	r5, [r3]	@ movhi
 202:Generated_Source\PSoC5/Clock_1.c ****             }
 376              		.loc 1 202 0
 377 002a 254A     		ldr	r2, .L45+8
 378              	.LVL12:
 379 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 002e 03F0BF03 		and	r3, r3, #191
 381 0032 1370     		strb	r3, [r2]
 382 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 383              	.LVL13:
 384              	.L36:
 208:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 385              		.loc 1 208 0
 386 0036 224A     		ldr	r2, .L45+8
 387              	.LVL14:
 388 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 389 003a 43F04003 		orr	r3, r3, #64
 390 003e 1370     		strb	r3, [r2]
 209:Generated_Source\PSoC5/Clock_1.c ****             }
 391              		.loc 1 209 0
 392 0040 1E4B     		ldr	r3, .L45+4
 393 0042 1D80     		strh	r5, [r3]	@ movhi
 394 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 395              	.LVL15:
 396              	.L34:
 214:Generated_Source\PSoC5/Clock_1.c ****             {
 397              		.loc 1 214 0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 16


 398 0046 EAB1     		cbz	r2, .L37
 216:Generated_Source\PSoC5/Clock_1.c **** 
 399              		.loc 1 216 0
 400 0048 1E49     		ldr	r1, .L45+12
 401 004a 0023     		movs	r3, #0
 402 004c 0B70     		strb	r3, [r1]
 223:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 403              		.loc 1 223 0
 404 004e 0127     		movs	r7, #1
 405 0050 1D4C     		ldr	r4, .L45+16
 406              	.LVL16:
 407 0052 2770     		strb	r7, [r4]
 224:Generated_Source\PSoC5/Clock_1.c **** #endif
 408              		.loc 1 224 0
 409 0054 0434     		adds	r4, r4, #4
 410 0056 2370     		strb	r3, [r4]
 227:Generated_Source\PSoC5/Clock_1.c **** 
 411              		.loc 1 227 0
 412 0058 0C3C     		subs	r4, r4, #12
 413 005a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 414 005c 03F07F03 		and	r3, r3, #127
 415 0060 2370     		strb	r3, [r4]
 230:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 416              		.loc 1 230 0
 417 0062 1A4B     		ldr	r3, .L45+20
 418 0064 1880     		strh	r0, [r3]	@ movhi
 231:Generated_Source\PSoC5/Clock_1.c **** 
 419              		.loc 1 231 0
 420 0066 0723     		movs	r3, #7
 421 0068 0B70     		strb	r3, [r1]
 422              	.L38:
 234:Generated_Source\PSoC5/Clock_1.c **** #endif
 423              		.loc 1 234 0 discriminator 1
 424 006a 164B     		ldr	r3, .L45+12
 425 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 006e 13F0010F 		tst	r3, #1
 427 0072 FAD1     		bne	.L38
 237:Generated_Source\PSoC5/Clock_1.c **** 
 428              		.loc 1 237 0
 429 0074 1049     		ldr	r1, .L45
 430 0076 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 431 0078 03F0FE03 		and	r3, r3, #254
 432 007c 0B70     		strb	r3, [r1]
 241:Generated_Source\PSoC5/Clock_1.c **** #endif
 433              		.loc 1 241 0
 434 007e 0021     		movs	r1, #0
 435 0080 104B     		ldr	r3, .L45+12
 436 0082 1970     		strb	r1, [r3]
 437              	.L37:
 246:Generated_Source\PSoC5/Clock_1.c ****             {
 438              		.loc 1 246 0
 439 0084 0C4B     		ldr	r3, .L45
 440 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 441 0088 13F0010F 		tst	r3, #1
 442 008c 0DD0     		beq	.L39
 249:Generated_Source\PSoC5/Clock_1.c **** 
 443              		.loc 1 249 0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 17


 444 008e 0F4B     		ldr	r3, .L45+20
 445 0090 1D80     		strh	r5, [r3]	@ movhi
 251:Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 446              		.loc 1 251 0
 447 0092 0EB1     		cbz	r6, .L43
 448 0094 0321     		movs	r1, #3
 449 0096 00E0     		b	.L40
 450              	.L43:
 451 0098 0121     		movs	r1, #1
 452              	.L40:
 251:Generated_Source\PSoC5/Clock_1.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 453              		.loc 1 251 0 is_stmt 0 discriminator 4
 454 009a 0A4B     		ldr	r3, .L45+12
 455 009c 1970     		strb	r1, [r3]
 456              	.L41:
 252:Generated_Source\PSoC5/Clock_1.c ****             }
 457              		.loc 1 252 0 is_stmt 1 discriminator 1
 458 009e 094B     		ldr	r3, .L45+12
 459 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 460 00a2 13F0010F 		tst	r3, #1
 461 00a6 FAD1     		bne	.L41
 462 00a8 01E0     		b	.L42
 463              	.L39:
 257:Generated_Source\PSoC5/Clock_1.c ****             }
 464              		.loc 1 257 0
 465 00aa 044B     		ldr	r3, .L45+4
 466 00ac 1D80     		strh	r5, [r3]	@ movhi
 467              	.L42:
 260:Generated_Source\PSoC5/Clock_1.c ****         }
 468              		.loc 1 260 0
 469 00ae 024B     		ldr	r3, .L45
 470 00b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 471 00b2 0A43     		orrs	r2, r2, r1
 472              	.LVL17:
 473 00b4 1A70     		strb	r2, [r3]
 474              	.L32:
 475 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 476              	.L46:
 477              		.align	2
 478              	.L45:
 479 00b8 A2430040 		.word	1073759138
 480 00bc 80400040 		.word	1073758336
 481 00c0 82400040 		.word	1073758338
 482 00c4 01400040 		.word	1073758209
 483 00c8 10400040 		.word	1073758224
 484 00cc 02400040 		.word	1073758210
 485              		.cfi_endproc
 486              	.LFE4:
 487              		.size	Clock_1_SetDividerRegister, .-Clock_1_SetDividerRegister
 488              		.section	.text.Clock_1_SetSourceRegister,"ax",%progbits
 489              		.align	2
 490              		.global	Clock_1_SetSourceRegister
 491              		.thumb
 492              		.thumb_func
 493              		.type	Clock_1_SetSourceRegister, %function
 494              	Clock_1_SetSourceRegister:
 495              	.LFB9:
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 18


 399:Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 496              		.loc 1 399 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              	.LVL18:
 501 0000 38B5     		push	{r3, r4, r5, lr}
 502              		.cfi_def_cfa_offset 16
 503              		.cfi_offset 3, -16
 504              		.cfi_offset 4, -12
 505              		.cfi_offset 5, -8
 506              		.cfi_offset 14, -4
 507 0002 0446     		mov	r4, r0
 400:Generated_Source\PSoC5/Clock_1.c ****     uint8 oldSrc = Clock_1_GetSourceRegister();
 508              		.loc 1 400 0
 509 0004 FFF7FEFF 		bl	Clock_1_GetDividerRegister
 510              	.LVL19:
 511 0008 0546     		mov	r5, r0
 512              	.LVL20:
 401:Generated_Source\PSoC5/Clock_1.c **** 
 513              		.loc 1 401 0
 514 000a FFF7FEFF 		bl	Clock_1_GetSourceRegister
 515              	.LVL21:
 403:Generated_Source\PSoC5/Clock_1.c ****     {
 516              		.loc 1 403 0
 517 000e 0346     		mov	r3, r0
 518 0010 60B1     		cbz	r0, .L48
 403:Generated_Source\PSoC5/Clock_1.c ****     {
 519              		.loc 1 403 0 is_stmt 0 discriminator 1
 520 0012 5CB9     		cbnz	r4, .L48
 403:Generated_Source\PSoC5/Clock_1.c ****     {
 521              		.loc 1 403 0 discriminator 2
 522 0014 55B9     		cbnz	r5, .L48
 407:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 523              		.loc 1 407 0 is_stmt 1
 524 0016 104B     		ldr	r3, .L52
 525 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 526 001a 42F04002 		orr	r2, r2, #64
 527 001e 1A70     		strb	r2, [r3]
 409:Generated_Source\PSoC5/Clock_1.c ****     }
 528              		.loc 1 409 0
 529 0020 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 530              	.LVL22:
 408:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 531              		.loc 1 408 0
 532 0022 00F0F800 		and	r0, r0, #248
 533 0026 2043     		orrs	r0, r0, r4
 534 0028 1870     		strb	r0, [r3]
 535 002a 38BD     		pop	{r3, r4, r5, pc}
 536              	.LVL23:
 537              	.L48:
 411:Generated_Source\PSoC5/Clock_1.c ****     {
 538              		.loc 1 411 0
 539 002c 63B9     		cbnz	r3, .L50
 411:Generated_Source\PSoC5/Clock_1.c ****     {
 540              		.loc 1 411 0 is_stmt 0 discriminator 1
 541 002e 5CB1     		cbz	r4, .L50
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 19


 411:Generated_Source\PSoC5/Clock_1.c ****     {
 542              		.loc 1 411 0 discriminator 2
 543 0030 55B9     		cbnz	r5, .L50
 416:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= ~CYCLK_SSS;
 544              		.loc 1 416 0 is_stmt 1
 545 0032 094B     		ldr	r3, .L52
 546 0034 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 547              	.LVL24:
 415:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 548              		.loc 1 415 0
 549 0036 00F0F800 		and	r0, r0, #248
 550 003a 2043     		orrs	r0, r0, r4
 551 003c 1870     		strb	r0, [r3]
 417:Generated_Source\PSoC5/Clock_1.c ****     }
 552              		.loc 1 417 0
 553 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 554 0040 02F0BF02 		and	r2, r2, #191
 555 0044 1A70     		strb	r2, [r3]
 556 0046 38BD     		pop	{r3, r4, r5, pc}
 557              	.LVL25:
 558              	.L50:
 422:Generated_Source\PSoC5/Clock_1.c ****     }
 559              		.loc 1 422 0
 560 0048 034B     		ldr	r3, .L52
 561 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 562              	.LVL26:
 421:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & ~Clock_1_SRC_SEL_MSK) | clkSource;
 563              		.loc 1 421 0
 564 004c 00F0F800 		and	r0, r0, #248
 565 0050 2043     		orrs	r0, r0, r4
 566 0052 1870     		strb	r0, [r3]
 567 0054 38BD     		pop	{r3, r4, r5, pc}
 568              	.LVL27:
 569              	.L53:
 570 0056 00BF     		.align	2
 571              	.L52:
 572 0058 82400040 		.word	1073758338
 573              		.cfi_endproc
 574              	.LFE9:
 575              		.size	Clock_1_SetSourceRegister, .-Clock_1_SetSourceRegister
 576              		.text
 577              	.Letext0:
 578              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 579              		.section	.debug_info,"",%progbits
 580              	.Ldebug_info0:
 581 0000 81020000 		.4byte	0x281
 582 0004 0400     		.2byte	0x4
 583 0006 00000000 		.4byte	.Ldebug_abbrev0
 584 000a 04       		.byte	0x4
 585 000b 01       		.uleb128 0x1
 586 000c 00020000 		.4byte	.LASF36
 587 0010 0C       		.byte	0xc
 588 0011 9A000000 		.4byte	.LASF37
 589 0015 A8020000 		.4byte	.LASF38
 590 0019 00000000 		.4byte	.Ldebug_ranges0+0
 591 001d 00000000 		.4byte	0
 592 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 20


 593 0025 02       		.uleb128 0x2
 594 0026 01       		.byte	0x1
 595 0027 06       		.byte	0x6
 596 0028 18010000 		.4byte	.LASF0
 597 002c 02       		.uleb128 0x2
 598 002d 01       		.byte	0x1
 599 002e 08       		.byte	0x8
 600 002f 0A010000 		.4byte	.LASF1
 601 0033 02       		.uleb128 0x2
 602 0034 02       		.byte	0x2
 603 0035 05       		.byte	0x5
 604 0036 1C000000 		.4byte	.LASF2
 605 003a 02       		.uleb128 0x2
 606 003b 02       		.byte	0x2
 607 003c 07       		.byte	0x7
 608 003d 63010000 		.4byte	.LASF3
 609 0041 02       		.uleb128 0x2
 610 0042 04       		.byte	0x4
 611 0043 05       		.byte	0x5
 612 0044 E1000000 		.4byte	.LASF4
 613 0048 02       		.uleb128 0x2
 614 0049 04       		.byte	0x4
 615 004a 07       		.byte	0x7
 616 004b A5010000 		.4byte	.LASF5
 617 004f 02       		.uleb128 0x2
 618 0050 08       		.byte	0x8
 619 0051 05       		.byte	0x5
 620 0052 C1000000 		.4byte	.LASF6
 621 0056 02       		.uleb128 0x2
 622 0057 08       		.byte	0x8
 623 0058 07       		.byte	0x7
 624 0059 24010000 		.4byte	.LASF7
 625 005d 03       		.uleb128 0x3
 626 005e 04       		.byte	0x4
 627 005f 05       		.byte	0x5
 628 0060 696E7400 		.ascii	"int\000"
 629 0064 02       		.uleb128 0x2
 630 0065 04       		.byte	0x4
 631 0066 07       		.byte	0x7
 632 0067 3B010000 		.4byte	.LASF8
 633 006b 04       		.uleb128 0x4
 634 006c 89000000 		.4byte	.LASF9
 635 0070 02       		.byte	0x2
 636 0071 E401     		.2byte	0x1e4
 637 0073 2C000000 		.4byte	0x2c
 638 0077 04       		.uleb128 0x4
 639 0078 73000000 		.4byte	.LASF10
 640 007c 02       		.byte	0x2
 641 007d E501     		.2byte	0x1e5
 642 007f 3A000000 		.4byte	0x3a
 643 0083 02       		.uleb128 0x2
 644 0084 04       		.byte	0x4
 645 0085 04       		.byte	0x4
 646 0086 BB000000 		.4byte	.LASF11
 647 008a 02       		.uleb128 0x2
 648 008b 08       		.byte	0x8
 649 008c 04       		.byte	0x4
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 21


 650 008d DC010000 		.4byte	.LASF12
 651 0091 02       		.uleb128 0x2
 652 0092 01       		.byte	0x1
 653 0093 08       		.byte	0x8
 654 0094 76010000 		.4byte	.LASF13
 655 0098 04       		.uleb128 0x4
 656 0099 A0010000 		.4byte	.LASF14
 657 009d 02       		.byte	0x2
 658 009e 8E02     		.2byte	0x28e
 659 00a0 A4000000 		.4byte	0xa4
 660 00a4 05       		.uleb128 0x5
 661 00a5 6B000000 		.4byte	0x6b
 662 00a9 04       		.uleb128 0x4
 663 00aa 16000000 		.4byte	.LASF15
 664 00ae 02       		.byte	0x2
 665 00af 8F02     		.2byte	0x28f
 666 00b1 B5000000 		.4byte	0xb5
 667 00b5 05       		.uleb128 0x5
 668 00b6 77000000 		.4byte	0x77
 669 00ba 06       		.uleb128 0x6
 670 00bb 00000000 		.4byte	.LASF16
 671 00bf 01       		.byte	0x1
 672 00c0 2C       		.byte	0x2c
 673 00c1 00000000 		.4byte	.LFB0
 674 00c5 10000000 		.4byte	.LFE0-.LFB0
 675 00c9 01       		.uleb128 0x1
 676 00ca 9C       		.byte	0x9c
 677 00cb 06       		.uleb128 0x6
 678 00cc B7010000 		.4byte	.LASF17
 679 00d0 01       		.byte	0x1
 680 00d1 44       		.byte	0x44
 681 00d2 00000000 		.4byte	.LFB1
 682 00d6 10000000 		.4byte	.LFE1-.LFB1
 683 00da 01       		.uleb128 0x1
 684 00db 9C       		.byte	0x9c
 685 00dc 07       		.uleb128 0x7
 686 00dd CF000000 		.4byte	.LASF18
 687 00e1 01       		.byte	0x1
 688 00e2 5D       		.byte	0x5d
 689 00e3 00000000 		.4byte	.LFB2
 690 00e7 64000000 		.4byte	.LFE2-.LFB2
 691 00eb 01       		.uleb128 0x1
 692 00ec 9C       		.byte	0x9c
 693 00ed 0B010000 		.4byte	0x10b
 694 00f1 08       		.uleb128 0x8
 695 00f2 0A000000 		.4byte	.LBB2
 696 00f6 5A000000 		.4byte	.LBE2-.LBB2
 697 00fa 09       		.uleb128 0x9
 698 00fb 8D010000 		.4byte	.LASF30
 699 00ff 01       		.byte	0x1
 700 0100 62       		.byte	0x62
 701 0101 77000000 		.4byte	0x77
 702 0105 00000000 		.4byte	.LLST0
 703 0109 00       		.byte	0
 704 010a 00       		.byte	0
 705 010b 07       		.uleb128 0x7
 706 010c E3010000 		.4byte	.LASF19
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 22


 707 0110 01       		.byte	0x1
 708 0111 93       		.byte	0x93
 709 0112 00000000 		.4byte	.LFB3
 710 0116 20000000 		.4byte	.LFE3-.LFB3
 711 011a 01       		.uleb128 0x1
 712 011b 9C       		.byte	0x9c
 713 011c 2E010000 		.4byte	0x12e
 714 0120 0A       		.uleb128 0xa
 715 0121 EA000000 		.4byte	.LASF21
 716 0125 01       		.byte	0x1
 717 0126 93       		.byte	0x93
 718 0127 6B000000 		.4byte	0x6b
 719 012b 01       		.uleb128 0x1
 720 012c 50       		.byte	0x50
 721 012d 00       		.byte	0
 722 012e 0B       		.uleb128 0xb
 723 012f 40000000 		.4byte	.LASF24
 724 0133 01       		.byte	0x1
 725 0134 1801     		.2byte	0x118
 726 0136 77000000 		.4byte	0x77
 727 013a 00000000 		.4byte	.LFB5
 728 013e 0C000000 		.4byte	.LFE5-.LFB5
 729 0142 01       		.uleb128 0x1
 730 0143 9C       		.byte	0x9c
 731 0144 0C       		.uleb128 0xc
 732 0145 C4010000 		.4byte	.LASF20
 733 0149 01       		.byte	0x1
 734 014a 3A01     		.2byte	0x13a
 735 014c 00000000 		.4byte	.LFB6
 736 0150 14000000 		.4byte	.LFE6-.LFB6
 737 0154 01       		.uleb128 0x1
 738 0155 9C       		.byte	0x9c
 739 0156 6B010000 		.4byte	0x16b
 740 015a 0D       		.uleb128 0xd
 741 015b 98010000 		.4byte	.LASF22
 742 015f 01       		.byte	0x1
 743 0160 3A01     		.2byte	0x13a
 744 0162 6B000000 		.4byte	0x6b
 745 0166 13000000 		.4byte	.LLST1
 746 016a 00       		.byte	0
 747 016b 0C       		.uleb128 0xc
 748 016c 26000000 		.4byte	.LASF23
 749 0170 01       		.byte	0x1
 750 0171 5C01     		.2byte	0x15c
 751 0173 00000000 		.4byte	.LFB7
 752 0177 14000000 		.4byte	.LFE7-.LFB7
 753 017b 01       		.uleb128 0x1
 754 017c 9C       		.byte	0x9c
 755 017d 92010000 		.4byte	0x192
 756 0181 0D       		.uleb128 0xd
 757 0182 98010000 		.4byte	.LASF22
 758 0186 01       		.byte	0x1
 759 0187 5C01     		.2byte	0x15c
 760 0189 6B000000 		.4byte	0x6b
 761 018d 34000000 		.4byte	.LLST2
 762 0191 00       		.byte	0
 763 0192 0B       		.uleb128 0xb
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 23


 764 0193 5B000000 		.4byte	.LASF25
 765 0197 01       		.byte	0x1
 766 0198 7001     		.2byte	0x170
 767 019a 6B000000 		.4byte	0x6b
 768 019e 00000000 		.4byte	.LFB8
 769 01a2 10000000 		.4byte	.LFE8-.LFB8
 770 01a6 01       		.uleb128 0x1
 771 01a7 9C       		.byte	0x9c
 772 01a8 0B       		.uleb128 0xb
 773 01a9 8E020000 		.4byte	.LASF26
 774 01ad 01       		.byte	0x1
 775 01ae B801     		.2byte	0x1b8
 776 01b0 6B000000 		.4byte	0x6b
 777 01b4 00000000 		.4byte	.LFB10
 778 01b8 10000000 		.4byte	.LFE10-.LFB10
 779 01bc 01       		.uleb128 0x1
 780 01bd 9C       		.byte	0x9c
 781 01be 07       		.uleb128 0x7
 782 01bf 48010000 		.4byte	.LASF27
 783 01c3 01       		.byte	0x1
 784 01c4 B6       		.byte	0xb6
 785 01c5 00000000 		.4byte	.LFB4
 786 01c9 D0000000 		.4byte	.LFE4-.LFB4
 787 01cd 01       		.uleb128 0x1
 788 01ce 9C       		.byte	0x9c
 789 01cf 2F020000 		.4byte	0x22f
 790 01d3 0E       		.uleb128 0xe
 791 01d4 8F000000 		.4byte	.LASF28
 792 01d8 01       		.byte	0x1
 793 01d9 B6       		.byte	0xb6
 794 01da 77000000 		.4byte	0x77
 795 01de 55000000 		.4byte	.LLST3
 796 01e2 0E       		.uleb128 0xe
 797 01e3 7A000000 		.4byte	.LASF29
 798 01e7 01       		.byte	0x1
 799 01e8 B6       		.byte	0xb6
 800 01e9 6B000000 		.4byte	0x6b
 801 01ed 76000000 		.4byte	.LLST4
 802 01f1 09       		.uleb128 0x9
 803 01f2 F8010000 		.4byte	.LASF31
 804 01f6 01       		.byte	0x1
 805 01f7 B8       		.byte	0xb8
 806 01f8 6B000000 		.4byte	0x6b
 807 01fc 97000000 		.4byte	.LLST5
 808 0200 09       		.uleb128 0x9
 809 0201 85010000 		.4byte	.LASF32
 810 0205 01       		.byte	0x1
 811 0206 BA       		.byte	0xba
 812 0207 6B000000 		.4byte	0x6b
 813 020b C0000000 		.4byte	.LLST6
 814 020f 0F       		.uleb128 0xf
 815 0210 8D010000 		.4byte	.LASF30
 816 0214 01       		.byte	0x1
 817 0215 BB       		.byte	0xbb
 818 0216 77000000 		.4byte	0x77
 819 021a 01       		.uleb128 0x1
 820 021b 50       		.byte	0x50
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 24


 821 021c 10       		.uleb128 0x10
 822 021d 0A000000 		.4byte	.LVL8
 823 0221 A8010000 		.4byte	0x1a8
 824 0225 10       		.uleb128 0x10
 825 0226 10000000 		.4byte	.LVL10
 826 022a 2E010000 		.4byte	0x12e
 827 022e 00       		.byte	0
 828 022f 11       		.uleb128 0x11
 829 0230 F0000000 		.4byte	.LASF39
 830 0234 01       		.byte	0x1
 831 0235 8E01     		.2byte	0x18e
 832 0237 00000000 		.4byte	.LFB9
 833 023b 5C000000 		.4byte	.LFE9-.LFB9
 834 023f 01       		.uleb128 0x1
 835 0240 9C       		.byte	0x9c
 836 0241 0D       		.uleb128 0xd
 837 0242 7B010000 		.4byte	.LASF33
 838 0246 01       		.byte	0x1
 839 0247 8E01     		.2byte	0x18e
 840 0249 6B000000 		.4byte	0x6b
 841 024d D3000000 		.4byte	.LLST7
 842 0251 12       		.uleb128 0x12
 843 0252 0E000000 		.4byte	.LASF34
 844 0256 01       		.byte	0x1
 845 0257 9001     		.2byte	0x190
 846 0259 77000000 		.4byte	0x77
 847 025d F4000000 		.4byte	.LLST8
 848 0261 12       		.uleb128 0x12
 849 0262 82000000 		.4byte	.LASF35
 850 0266 01       		.byte	0x1
 851 0267 9101     		.2byte	0x191
 852 0269 6B000000 		.4byte	0x6b
 853 026d 07010000 		.4byte	.LLST9
 854 0271 10       		.uleb128 0x10
 855 0272 08000000 		.4byte	.LVL19
 856 0276 2E010000 		.4byte	0x12e
 857 027a 10       		.uleb128 0x10
 858 027b 0E000000 		.4byte	.LVL21
 859 027f A8010000 		.4byte	0x1a8
 860 0283 00       		.byte	0
 861 0284 00       		.byte	0
 862              		.section	.debug_abbrev,"",%progbits
 863              	.Ldebug_abbrev0:
 864 0000 01       		.uleb128 0x1
 865 0001 11       		.uleb128 0x11
 866 0002 01       		.byte	0x1
 867 0003 25       		.uleb128 0x25
 868 0004 0E       		.uleb128 0xe
 869 0005 13       		.uleb128 0x13
 870 0006 0B       		.uleb128 0xb
 871 0007 03       		.uleb128 0x3
 872 0008 0E       		.uleb128 0xe
 873 0009 1B       		.uleb128 0x1b
 874 000a 0E       		.uleb128 0xe
 875 000b 55       		.uleb128 0x55
 876 000c 17       		.uleb128 0x17
 877 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 25


 878 000e 01       		.uleb128 0x1
 879 000f 10       		.uleb128 0x10
 880 0010 17       		.uleb128 0x17
 881 0011 00       		.byte	0
 882 0012 00       		.byte	0
 883 0013 02       		.uleb128 0x2
 884 0014 24       		.uleb128 0x24
 885 0015 00       		.byte	0
 886 0016 0B       		.uleb128 0xb
 887 0017 0B       		.uleb128 0xb
 888 0018 3E       		.uleb128 0x3e
 889 0019 0B       		.uleb128 0xb
 890 001a 03       		.uleb128 0x3
 891 001b 0E       		.uleb128 0xe
 892 001c 00       		.byte	0
 893 001d 00       		.byte	0
 894 001e 03       		.uleb128 0x3
 895 001f 24       		.uleb128 0x24
 896 0020 00       		.byte	0
 897 0021 0B       		.uleb128 0xb
 898 0022 0B       		.uleb128 0xb
 899 0023 3E       		.uleb128 0x3e
 900 0024 0B       		.uleb128 0xb
 901 0025 03       		.uleb128 0x3
 902 0026 08       		.uleb128 0x8
 903 0027 00       		.byte	0
 904 0028 00       		.byte	0
 905 0029 04       		.uleb128 0x4
 906 002a 16       		.uleb128 0x16
 907 002b 00       		.byte	0
 908 002c 03       		.uleb128 0x3
 909 002d 0E       		.uleb128 0xe
 910 002e 3A       		.uleb128 0x3a
 911 002f 0B       		.uleb128 0xb
 912 0030 3B       		.uleb128 0x3b
 913 0031 05       		.uleb128 0x5
 914 0032 49       		.uleb128 0x49
 915 0033 13       		.uleb128 0x13
 916 0034 00       		.byte	0
 917 0035 00       		.byte	0
 918 0036 05       		.uleb128 0x5
 919 0037 35       		.uleb128 0x35
 920 0038 00       		.byte	0
 921 0039 49       		.uleb128 0x49
 922 003a 13       		.uleb128 0x13
 923 003b 00       		.byte	0
 924 003c 00       		.byte	0
 925 003d 06       		.uleb128 0x6
 926 003e 2E       		.uleb128 0x2e
 927 003f 00       		.byte	0
 928 0040 3F       		.uleb128 0x3f
 929 0041 19       		.uleb128 0x19
 930 0042 03       		.uleb128 0x3
 931 0043 0E       		.uleb128 0xe
 932 0044 3A       		.uleb128 0x3a
 933 0045 0B       		.uleb128 0xb
 934 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 26


 935 0047 0B       		.uleb128 0xb
 936 0048 27       		.uleb128 0x27
 937 0049 19       		.uleb128 0x19
 938 004a 11       		.uleb128 0x11
 939 004b 01       		.uleb128 0x1
 940 004c 12       		.uleb128 0x12
 941 004d 06       		.uleb128 0x6
 942 004e 40       		.uleb128 0x40
 943 004f 18       		.uleb128 0x18
 944 0050 9742     		.uleb128 0x2117
 945 0052 19       		.uleb128 0x19
 946 0053 00       		.byte	0
 947 0054 00       		.byte	0
 948 0055 07       		.uleb128 0x7
 949 0056 2E       		.uleb128 0x2e
 950 0057 01       		.byte	0x1
 951 0058 3F       		.uleb128 0x3f
 952 0059 19       		.uleb128 0x19
 953 005a 03       		.uleb128 0x3
 954 005b 0E       		.uleb128 0xe
 955 005c 3A       		.uleb128 0x3a
 956 005d 0B       		.uleb128 0xb
 957 005e 3B       		.uleb128 0x3b
 958 005f 0B       		.uleb128 0xb
 959 0060 27       		.uleb128 0x27
 960 0061 19       		.uleb128 0x19
 961 0062 11       		.uleb128 0x11
 962 0063 01       		.uleb128 0x1
 963 0064 12       		.uleb128 0x12
 964 0065 06       		.uleb128 0x6
 965 0066 40       		.uleb128 0x40
 966 0067 18       		.uleb128 0x18
 967 0068 9742     		.uleb128 0x2117
 968 006a 19       		.uleb128 0x19
 969 006b 01       		.uleb128 0x1
 970 006c 13       		.uleb128 0x13
 971 006d 00       		.byte	0
 972 006e 00       		.byte	0
 973 006f 08       		.uleb128 0x8
 974 0070 0B       		.uleb128 0xb
 975 0071 01       		.byte	0x1
 976 0072 11       		.uleb128 0x11
 977 0073 01       		.uleb128 0x1
 978 0074 12       		.uleb128 0x12
 979 0075 06       		.uleb128 0x6
 980 0076 00       		.byte	0
 981 0077 00       		.byte	0
 982 0078 09       		.uleb128 0x9
 983 0079 34       		.uleb128 0x34
 984 007a 00       		.byte	0
 985 007b 03       		.uleb128 0x3
 986 007c 0E       		.uleb128 0xe
 987 007d 3A       		.uleb128 0x3a
 988 007e 0B       		.uleb128 0xb
 989 007f 3B       		.uleb128 0x3b
 990 0080 0B       		.uleb128 0xb
 991 0081 49       		.uleb128 0x49
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 27


 992 0082 13       		.uleb128 0x13
 993 0083 02       		.uleb128 0x2
 994 0084 17       		.uleb128 0x17
 995 0085 00       		.byte	0
 996 0086 00       		.byte	0
 997 0087 0A       		.uleb128 0xa
 998 0088 05       		.uleb128 0x5
 999 0089 00       		.byte	0
 1000 008a 03       		.uleb128 0x3
 1001 008b 0E       		.uleb128 0xe
 1002 008c 3A       		.uleb128 0x3a
 1003 008d 0B       		.uleb128 0xb
 1004 008e 3B       		.uleb128 0x3b
 1005 008f 0B       		.uleb128 0xb
 1006 0090 49       		.uleb128 0x49
 1007 0091 13       		.uleb128 0x13
 1008 0092 02       		.uleb128 0x2
 1009 0093 18       		.uleb128 0x18
 1010 0094 00       		.byte	0
 1011 0095 00       		.byte	0
 1012 0096 0B       		.uleb128 0xb
 1013 0097 2E       		.uleb128 0x2e
 1014 0098 00       		.byte	0
 1015 0099 3F       		.uleb128 0x3f
 1016 009a 19       		.uleb128 0x19
 1017 009b 03       		.uleb128 0x3
 1018 009c 0E       		.uleb128 0xe
 1019 009d 3A       		.uleb128 0x3a
 1020 009e 0B       		.uleb128 0xb
 1021 009f 3B       		.uleb128 0x3b
 1022 00a0 05       		.uleb128 0x5
 1023 00a1 27       		.uleb128 0x27
 1024 00a2 19       		.uleb128 0x19
 1025 00a3 49       		.uleb128 0x49
 1026 00a4 13       		.uleb128 0x13
 1027 00a5 11       		.uleb128 0x11
 1028 00a6 01       		.uleb128 0x1
 1029 00a7 12       		.uleb128 0x12
 1030 00a8 06       		.uleb128 0x6
 1031 00a9 40       		.uleb128 0x40
 1032 00aa 18       		.uleb128 0x18
 1033 00ab 9742     		.uleb128 0x2117
 1034 00ad 19       		.uleb128 0x19
 1035 00ae 00       		.byte	0
 1036 00af 00       		.byte	0
 1037 00b0 0C       		.uleb128 0xc
 1038 00b1 2E       		.uleb128 0x2e
 1039 00b2 01       		.byte	0x1
 1040 00b3 3F       		.uleb128 0x3f
 1041 00b4 19       		.uleb128 0x19
 1042 00b5 03       		.uleb128 0x3
 1043 00b6 0E       		.uleb128 0xe
 1044 00b7 3A       		.uleb128 0x3a
 1045 00b8 0B       		.uleb128 0xb
 1046 00b9 3B       		.uleb128 0x3b
 1047 00ba 05       		.uleb128 0x5
 1048 00bb 27       		.uleb128 0x27
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 28


 1049 00bc 19       		.uleb128 0x19
 1050 00bd 11       		.uleb128 0x11
 1051 00be 01       		.uleb128 0x1
 1052 00bf 12       		.uleb128 0x12
 1053 00c0 06       		.uleb128 0x6
 1054 00c1 40       		.uleb128 0x40
 1055 00c2 18       		.uleb128 0x18
 1056 00c3 9742     		.uleb128 0x2117
 1057 00c5 19       		.uleb128 0x19
 1058 00c6 01       		.uleb128 0x1
 1059 00c7 13       		.uleb128 0x13
 1060 00c8 00       		.byte	0
 1061 00c9 00       		.byte	0
 1062 00ca 0D       		.uleb128 0xd
 1063 00cb 05       		.uleb128 0x5
 1064 00cc 00       		.byte	0
 1065 00cd 03       		.uleb128 0x3
 1066 00ce 0E       		.uleb128 0xe
 1067 00cf 3A       		.uleb128 0x3a
 1068 00d0 0B       		.uleb128 0xb
 1069 00d1 3B       		.uleb128 0x3b
 1070 00d2 05       		.uleb128 0x5
 1071 00d3 49       		.uleb128 0x49
 1072 00d4 13       		.uleb128 0x13
 1073 00d5 02       		.uleb128 0x2
 1074 00d6 17       		.uleb128 0x17
 1075 00d7 00       		.byte	0
 1076 00d8 00       		.byte	0
 1077 00d9 0E       		.uleb128 0xe
 1078 00da 05       		.uleb128 0x5
 1079 00db 00       		.byte	0
 1080 00dc 03       		.uleb128 0x3
 1081 00dd 0E       		.uleb128 0xe
 1082 00de 3A       		.uleb128 0x3a
 1083 00df 0B       		.uleb128 0xb
 1084 00e0 3B       		.uleb128 0x3b
 1085 00e1 0B       		.uleb128 0xb
 1086 00e2 49       		.uleb128 0x49
 1087 00e3 13       		.uleb128 0x13
 1088 00e4 02       		.uleb128 0x2
 1089 00e5 17       		.uleb128 0x17
 1090 00e6 00       		.byte	0
 1091 00e7 00       		.byte	0
 1092 00e8 0F       		.uleb128 0xf
 1093 00e9 34       		.uleb128 0x34
 1094 00ea 00       		.byte	0
 1095 00eb 03       		.uleb128 0x3
 1096 00ec 0E       		.uleb128 0xe
 1097 00ed 3A       		.uleb128 0x3a
 1098 00ee 0B       		.uleb128 0xb
 1099 00ef 3B       		.uleb128 0x3b
 1100 00f0 0B       		.uleb128 0xb
 1101 00f1 49       		.uleb128 0x49
 1102 00f2 13       		.uleb128 0x13
 1103 00f3 02       		.uleb128 0x2
 1104 00f4 18       		.uleb128 0x18
 1105 00f5 00       		.byte	0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 29


 1106 00f6 00       		.byte	0
 1107 00f7 10       		.uleb128 0x10
 1108 00f8 898201   		.uleb128 0x4109
 1109 00fb 00       		.byte	0
 1110 00fc 11       		.uleb128 0x11
 1111 00fd 01       		.uleb128 0x1
 1112 00fe 31       		.uleb128 0x31
 1113 00ff 13       		.uleb128 0x13
 1114 0100 00       		.byte	0
 1115 0101 00       		.byte	0
 1116 0102 11       		.uleb128 0x11
 1117 0103 2E       		.uleb128 0x2e
 1118 0104 01       		.byte	0x1
 1119 0105 3F       		.uleb128 0x3f
 1120 0106 19       		.uleb128 0x19
 1121 0107 03       		.uleb128 0x3
 1122 0108 0E       		.uleb128 0xe
 1123 0109 3A       		.uleb128 0x3a
 1124 010a 0B       		.uleb128 0xb
 1125 010b 3B       		.uleb128 0x3b
 1126 010c 05       		.uleb128 0x5
 1127 010d 27       		.uleb128 0x27
 1128 010e 19       		.uleb128 0x19
 1129 010f 11       		.uleb128 0x11
 1130 0110 01       		.uleb128 0x1
 1131 0111 12       		.uleb128 0x12
 1132 0112 06       		.uleb128 0x6
 1133 0113 40       		.uleb128 0x40
 1134 0114 18       		.uleb128 0x18
 1135 0115 9742     		.uleb128 0x2117
 1136 0117 19       		.uleb128 0x19
 1137 0118 00       		.byte	0
 1138 0119 00       		.byte	0
 1139 011a 12       		.uleb128 0x12
 1140 011b 34       		.uleb128 0x34
 1141 011c 00       		.byte	0
 1142 011d 03       		.uleb128 0x3
 1143 011e 0E       		.uleb128 0xe
 1144 011f 3A       		.uleb128 0x3a
 1145 0120 0B       		.uleb128 0xb
 1146 0121 3B       		.uleb128 0x3b
 1147 0122 05       		.uleb128 0x5
 1148 0123 49       		.uleb128 0x49
 1149 0124 13       		.uleb128 0x13
 1150 0125 02       		.uleb128 0x2
 1151 0126 17       		.uleb128 0x17
 1152 0127 00       		.byte	0
 1153 0128 00       		.byte	0
 1154 0129 00       		.byte	0
 1155              		.section	.debug_loc,"",%progbits
 1156              	.Ldebug_loc0:
 1157              	.LLST0:
 1158 0000 2A000000 		.4byte	.LVL0
 1159 0004 50000000 		.4byte	.LVL1
 1160 0008 0100     		.2byte	0x1
 1161 000a 52       		.byte	0x52
 1162 000b 00000000 		.4byte	0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 30


 1163 000f 00000000 		.4byte	0
 1164              	.LLST1:
 1165 0013 00000000 		.4byte	.LVL3
 1166 0017 08000000 		.4byte	.LVL4
 1167 001b 0100     		.2byte	0x1
 1168 001d 50       		.byte	0x50
 1169 001e 08000000 		.4byte	.LVL4
 1170 0022 14000000 		.4byte	.LFE6
 1171 0026 0400     		.2byte	0x4
 1172 0028 F3       		.byte	0xf3
 1173 0029 01       		.uleb128 0x1
 1174 002a 50       		.byte	0x50
 1175 002b 9F       		.byte	0x9f
 1176 002c 00000000 		.4byte	0
 1177 0030 00000000 		.4byte	0
 1178              	.LLST2:
 1179 0034 00000000 		.4byte	.LVL5
 1180 0038 06000000 		.4byte	.LVL6
 1181 003c 0100     		.2byte	0x1
 1182 003e 50       		.byte	0x50
 1183 003f 06000000 		.4byte	.LVL6
 1184 0043 14000000 		.4byte	.LFE7
 1185 0047 0400     		.2byte	0x4
 1186 0049 F3       		.byte	0xf3
 1187 004a 01       		.uleb128 0x1
 1188 004b 50       		.byte	0x50
 1189 004c 9F       		.byte	0x9f
 1190 004d 00000000 		.4byte	0
 1191 0051 00000000 		.4byte	0
 1192              	.LLST3:
 1193 0055 00000000 		.4byte	.LVL7
 1194 0059 09000000 		.4byte	.LVL8-1
 1195 005d 0100     		.2byte	0x1
 1196 005f 50       		.byte	0x50
 1197 0060 09000000 		.4byte	.LVL8-1
 1198 0064 D0000000 		.4byte	.LFE4
 1199 0068 0400     		.2byte	0x4
 1200 006a F3       		.byte	0xf3
 1201 006b 01       		.uleb128 0x1
 1202 006c 50       		.byte	0x50
 1203 006d 9F       		.byte	0x9f
 1204 006e 00000000 		.4byte	0
 1205 0072 00000000 		.4byte	0
 1206              	.LLST4:
 1207 0076 00000000 		.4byte	.LVL7
 1208 007a 09000000 		.4byte	.LVL8-1
 1209 007e 0100     		.2byte	0x1
 1210 0080 51       		.byte	0x51
 1211 0081 09000000 		.4byte	.LVL8-1
 1212 0085 D0000000 		.4byte	.LFE4
 1213 0089 0400     		.2byte	0x4
 1214 008b F3       		.byte	0xf3
 1215 008c 01       		.uleb128 0x1
 1216 008d 51       		.byte	0x51
 1217 008e 9F       		.byte	0x9f
 1218 008f 00000000 		.4byte	0
 1219 0093 00000000 		.4byte	0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 31


 1220              	.LLST5:
 1221 0097 1C000000 		.4byte	.LVL11
 1222 009b 2C000000 		.4byte	.LVL12
 1223 009f 0100     		.2byte	0x1
 1224 00a1 52       		.byte	0x52
 1225 00a2 36000000 		.4byte	.LVL13
 1226 00a6 38000000 		.4byte	.LVL14
 1227 00aa 0100     		.2byte	0x1
 1228 00ac 52       		.byte	0x52
 1229 00ad 46000000 		.4byte	.LVL15
 1230 00b1 B4000000 		.4byte	.LVL17
 1231 00b5 0100     		.2byte	0x1
 1232 00b7 52       		.byte	0x52
 1233 00b8 00000000 		.4byte	0
 1234 00bc 00000000 		.4byte	0
 1235              	.LLST6:
 1236 00c0 0C000000 		.4byte	.LVL9
 1237 00c4 52000000 		.4byte	.LVL16
 1238 00c8 0100     		.2byte	0x1
 1239 00ca 54       		.byte	0x54
 1240 00cb 00000000 		.4byte	0
 1241 00cf 00000000 		.4byte	0
 1242              	.LLST7:
 1243 00d3 00000000 		.4byte	.LVL18
 1244 00d7 07000000 		.4byte	.LVL19-1
 1245 00db 0100     		.2byte	0x1
 1246 00dd 50       		.byte	0x50
 1247 00de 07000000 		.4byte	.LVL19-1
 1248 00e2 5C000000 		.4byte	.LFE9
 1249 00e6 0400     		.2byte	0x4
 1250 00e8 F3       		.byte	0xf3
 1251 00e9 01       		.uleb128 0x1
 1252 00ea 50       		.byte	0x50
 1253 00eb 9F       		.byte	0x9f
 1254 00ec 00000000 		.4byte	0
 1255 00f0 00000000 		.4byte	0
 1256              	.LLST8:
 1257 00f4 0A000000 		.4byte	.LVL20
 1258 00f8 56000000 		.4byte	.LVL27
 1259 00fc 0100     		.2byte	0x1
 1260 00fe 55       		.byte	0x55
 1261 00ff 00000000 		.4byte	0
 1262 0103 00000000 		.4byte	0
 1263              	.LLST9:
 1264 0107 0E000000 		.4byte	.LVL21
 1265 010b 22000000 		.4byte	.LVL22
 1266 010f 0100     		.2byte	0x1
 1267 0111 50       		.byte	0x50
 1268 0112 2C000000 		.4byte	.LVL23
 1269 0116 36000000 		.4byte	.LVL24
 1270 011a 0100     		.2byte	0x1
 1271 011c 50       		.byte	0x50
 1272 011d 48000000 		.4byte	.LVL25
 1273 0121 4C000000 		.4byte	.LVL26
 1274 0125 0100     		.2byte	0x1
 1275 0127 50       		.byte	0x50
 1276 0128 00000000 		.4byte	0
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 32


 1277 012c 00000000 		.4byte	0
 1278              		.section	.debug_aranges,"",%progbits
 1279 0000 6C000000 		.4byte	0x6c
 1280 0004 0200     		.2byte	0x2
 1281 0006 00000000 		.4byte	.Ldebug_info0
 1282 000a 04       		.byte	0x4
 1283 000b 00       		.byte	0
 1284 000c 0000     		.2byte	0
 1285 000e 0000     		.2byte	0
 1286 0010 00000000 		.4byte	.LFB0
 1287 0014 10000000 		.4byte	.LFE0-.LFB0
 1288 0018 00000000 		.4byte	.LFB1
 1289 001c 10000000 		.4byte	.LFE1-.LFB1
 1290 0020 00000000 		.4byte	.LFB2
 1291 0024 64000000 		.4byte	.LFE2-.LFB2
 1292 0028 00000000 		.4byte	.LFB3
 1293 002c 20000000 		.4byte	.LFE3-.LFB3
 1294 0030 00000000 		.4byte	.LFB5
 1295 0034 0C000000 		.4byte	.LFE5-.LFB5
 1296 0038 00000000 		.4byte	.LFB6
 1297 003c 14000000 		.4byte	.LFE6-.LFB6
 1298 0040 00000000 		.4byte	.LFB7
 1299 0044 14000000 		.4byte	.LFE7-.LFB7
 1300 0048 00000000 		.4byte	.LFB8
 1301 004c 10000000 		.4byte	.LFE8-.LFB8
 1302 0050 00000000 		.4byte	.LFB10
 1303 0054 10000000 		.4byte	.LFE10-.LFB10
 1304 0058 00000000 		.4byte	.LFB4
 1305 005c D0000000 		.4byte	.LFE4-.LFB4
 1306 0060 00000000 		.4byte	.LFB9
 1307 0064 5C000000 		.4byte	.LFE9-.LFB9
 1308 0068 00000000 		.4byte	0
 1309 006c 00000000 		.4byte	0
 1310              		.section	.debug_ranges,"",%progbits
 1311              	.Ldebug_ranges0:
 1312 0000 00000000 		.4byte	.LFB0
 1313 0004 10000000 		.4byte	.LFE0
 1314 0008 00000000 		.4byte	.LFB1
 1315 000c 10000000 		.4byte	.LFE1
 1316 0010 00000000 		.4byte	.LFB2
 1317 0014 64000000 		.4byte	.LFE2
 1318 0018 00000000 		.4byte	.LFB3
 1319 001c 20000000 		.4byte	.LFE3
 1320 0020 00000000 		.4byte	.LFB5
 1321 0024 0C000000 		.4byte	.LFE5
 1322 0028 00000000 		.4byte	.LFB6
 1323 002c 14000000 		.4byte	.LFE6
 1324 0030 00000000 		.4byte	.LFB7
 1325 0034 14000000 		.4byte	.LFE7
 1326 0038 00000000 		.4byte	.LFB8
 1327 003c 10000000 		.4byte	.LFE8
 1328 0040 00000000 		.4byte	.LFB10
 1329 0044 10000000 		.4byte	.LFE10
 1330 0048 00000000 		.4byte	.LFB4
 1331 004c D0000000 		.4byte	.LFE4
 1332 0050 00000000 		.4byte	.LFB9
 1333 0054 5C000000 		.4byte	.LFE9
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 33


 1334 0058 00000000 		.4byte	0
 1335 005c 00000000 		.4byte	0
 1336              		.section	.debug_line,"",%progbits
 1337              	.Ldebug_line0:
 1338 0000 75010000 		.section	.debug_str,"MS",%progbits,1
 1338      02004400 
 1338      00000201 
 1338      FB0E0D00 
 1338      01010101 
 1339              	.LASF16:
 1340 0000 436C6F63 		.ascii	"Clock_1_Start\000"
 1340      6B5F315F 
 1340      53746172 
 1340      7400
 1341              	.LASF34:
 1342 000e 63757272 		.ascii	"currDiv\000"
 1342      44697600 
 1343              	.LASF15:
 1344 0016 72656731 		.ascii	"reg16\000"
 1344      3600
 1345              	.LASF2:
 1346 001c 73686F72 		.ascii	"short int\000"
 1346      7420696E 
 1346      7400
 1347              	.LASF23:
 1348 0026 436C6F63 		.ascii	"Clock_1_ClearModeRegister\000"
 1348      6B5F315F 
 1348      436C6561 
 1348      724D6F64 
 1348      65526567 
 1349              	.LASF24:
 1350 0040 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 1350      6B5F315F 
 1350      47657444 
 1350      69766964 
 1350      65725265 
 1351              	.LASF25:
 1352 005b 436C6F63 		.ascii	"Clock_1_GetModeRegister\000"
 1352      6B5F315F 
 1352      4765744D 
 1352      6F646552 
 1352      65676973 
 1353              	.LASF10:
 1354 0073 75696E74 		.ascii	"uint16\000"
 1354      313600
 1355              	.LASF29:
 1356 007a 72657374 		.ascii	"restart\000"
 1356      61727400 
 1357              	.LASF35:
 1358 0082 6F6C6453 		.ascii	"oldSrc\000"
 1358      726300
 1359              	.LASF9:
 1360 0089 75696E74 		.ascii	"uint8\000"
 1360      3800
 1361              	.LASF28:
 1362 008f 636C6B44 		.ascii	"clkDivider\000"
 1362      69766964 
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 34


 1362      657200
 1363              	.LASF37:
 1364 009a 47656E65 		.ascii	"Generated_Source\\PSoC5\\Clock_1.c\000"
 1364      72617465 
 1364      645F536F 
 1364      75726365 
 1364      5C50536F 
 1365              	.LASF11:
 1366 00bb 666C6F61 		.ascii	"float\000"
 1366      7400
 1367              	.LASF6:
 1368 00c1 6C6F6E67 		.ascii	"long long int\000"
 1368      206C6F6E 
 1368      6720696E 
 1368      7400
 1369              	.LASF18:
 1370 00cf 436C6F63 		.ascii	"Clock_1_StopBlock\000"
 1370      6B5F315F 
 1370      53746F70 
 1370      426C6F63 
 1370      6B00
 1371              	.LASF4:
 1372 00e1 6C6F6E67 		.ascii	"long int\000"
 1372      20696E74 
 1372      00
 1373              	.LASF21:
 1374 00ea 73746174 		.ascii	"state\000"
 1374      6500
 1375              	.LASF39:
 1376 00f0 436C6F63 		.ascii	"Clock_1_SetSourceRegister\000"
 1376      6B5F315F 
 1376      53657453 
 1376      6F757263 
 1376      65526567 
 1377              	.LASF1:
 1378 010a 756E7369 		.ascii	"unsigned char\000"
 1378      676E6564 
 1378      20636861 
 1378      7200
 1379              	.LASF0:
 1380 0118 7369676E 		.ascii	"signed char\000"
 1380      65642063 
 1380      68617200 
 1381              	.LASF7:
 1382 0124 6C6F6E67 		.ascii	"long long unsigned int\000"
 1382      206C6F6E 
 1382      6720756E 
 1382      7369676E 
 1382      65642069 
 1383              	.LASF8:
 1384 013b 756E7369 		.ascii	"unsigned int\000"
 1384      676E6564 
 1384      20696E74 
 1384      00
 1385              	.LASF27:
 1386 0148 436C6F63 		.ascii	"Clock_1_SetDividerRegister\000"
 1386      6B5F315F 
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 35


 1386      53657444 
 1386      69766964 
 1386      65725265 
 1387              	.LASF3:
 1388 0163 73686F72 		.ascii	"short unsigned int\000"
 1388      7420756E 
 1388      7369676E 
 1388      65642069 
 1388      6E7400
 1389              	.LASF13:
 1390 0176 63686172 		.ascii	"char\000"
 1390      00
 1391              	.LASF33:
 1392 017b 636C6B53 		.ascii	"clkSource\000"
 1392      6F757263 
 1392      6500
 1393              	.LASF32:
 1394 0185 63757272 		.ascii	"currSrc\000"
 1394      53726300 
 1395              	.LASF30:
 1396 018d 6F6C6444 		.ascii	"oldDivider\000"
 1396      69766964 
 1396      657200
 1397              	.LASF22:
 1398 0198 636C6B4D 		.ascii	"clkMode\000"
 1398      6F646500 
 1399              	.LASF14:
 1400 01a0 72656738 		.ascii	"reg8\000"
 1400      00
 1401              	.LASF5:
 1402 01a5 6C6F6E67 		.ascii	"long unsigned int\000"
 1402      20756E73 
 1402      69676E65 
 1402      6420696E 
 1402      7400
 1403              	.LASF17:
 1404 01b7 436C6F63 		.ascii	"Clock_1_Stop\000"
 1404      6B5F315F 
 1404      53746F70 
 1404      00
 1405              	.LASF20:
 1406 01c4 436C6F63 		.ascii	"Clock_1_SetModeRegister\000"
 1406      6B5F315F 
 1406      5365744D 
 1406      6F646552 
 1406      65676973 
 1407              	.LASF12:
 1408 01dc 646F7562 		.ascii	"double\000"
 1408      6C6500
 1409              	.LASF19:
 1410 01e3 436C6F63 		.ascii	"Clock_1_StandbyPower\000"
 1410      6B5F315F 
 1410      5374616E 
 1410      64627950 
 1410      6F776572 
 1411              	.LASF31:
 1412 01f8 656E6162 		.ascii	"enabled\000"
ARM GAS  C:\Users\nikod\AppData\Local\Temp\ccPcPTbz.s 			page 36


 1412      6C656400 
 1413              	.LASF36:
 1414 0200 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1414      43313120 
 1414      352E342E 
 1414      31203230 
 1414      31363036 
 1415 0233 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1415      20726576 
 1415      6973696F 
 1415      6E203233 
 1415      37373135 
 1416 0266 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1416      66756E63 
 1416      74696F6E 
 1416      2D736563 
 1416      74696F6E 
 1417              	.LASF26:
 1418 028e 436C6F63 		.ascii	"Clock_1_GetSourceRegister\000"
 1418      6B5F315F 
 1418      47657453 
 1418      6F757263 
 1418      65526567 
 1419              	.LASF38:
 1420 02a8 433A5C55 		.ascii	"C:\\Users\\nikod\\Documents\\PSoC Creator\\ControlM"
 1420      73657273 
 1420      5C6E696B 
 1420      6F645C44 
 1420      6F63756D 
 1421 02d6 6F746F72 		.ascii	"otor\\Motor.cydsn\000"
 1421      5C4D6F74 
 1421      6F722E63 
 1421      7964736E 
 1421      00
 1422              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
